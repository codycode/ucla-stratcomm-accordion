/*******
1. Accordion is a mobile only feature. Accordians are fully expanded on screens above 768px.
2. Grey backgrounds are a mobile only feature.
3. Numbers in IDs and aria-controls and aria-labelledby must be consecutive.
   (i.e. first one is id="accordion1id" second one is id="accordion2id" and so on.)

   HTML structure:

   1. Accordion main wrapper (wraps #2 and content after [i.e faculty cards in leadership page])
   2. Accordion title section and a button (used as a drop down mobile for mobile)
   3. Accordion content section

   Code:

   1. Accordion Main Wrapper - Should include 'section-wrapper accordion' class names - <div class="section-wrapper accordion">

   2. Accordion - Each accordion includes (letters denote levels of nesting):
    a. h2 class - <h2 class="accordion__title">
     b. button for accordion - <button id="accordion1id"...> <NAME OF SECTION> </button>

   Example case for the accordion:

   <div class="section-wrapper accordion">       <!-- 1. Accordion main wrapper -->

     <h2 class="accordion__title">       <!-- 2. Accordion title section and button -->
       <button id="accordion1id" class="accordion__title-button" type="button" aria-expanded="true" aria-controls="sect1">
         <TITLE HERE (i.e. Fields Medal in Mathematics)>
       </button>
     </h2>

     <div id="sect1" role="region" aria-labelledby="accordion1id" class="accordion__content"> <!-- 3. Accordion content section -->
         <p>Add content here</p>
     </div>
   </div>

See examples on:
- Alumni & Student Honors Page
- Terms of Use
- Accessibility
- Site Information

Further documentation on ADA compliant accordions
- https://www.w3.org/TR/wai-aria-practices/examples/accordion/accordion.html
Other Resources
- aria-labelledby - https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_aria-labelledby_attribute
- role = region - https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/Region_role
*******/

$default-state: #00598c;
$hover-state: #ffe500;
$ucla-blue: #2774ae;
$lightest-grey-2: #e5e5e5;

.accordion {
  padding: 48px 24px 48px 24px;
  transition: 0.5s;

  @media (min-width: breakpoint-min(md)) {
    padding: 48px 35px 48px 35px !important;
    display: inline-block;
  }

  &.show-me {
    padding: 48px 24px;
    transition: 0.5s;

    @media (min-width: breakpoint-min(md)) {
      padding: 48px 35px 48px 35px !important;
    }
  }

  &__title {
    display: block;
    position: relative;
    width: 100%;
    margin: 0 auto;
    max-width: 1200px;

    @media (min-width: breakpoint-min(sm)) {
      padding-left: 0;
      width: 100%;
      margin-left: auto !important;
    }

    &:hover {
      .accordion__title-arrow,
      .accordion__title-arrow.flip {
        background: $hover-state;
      }
    }

    &:focus {
      border-color: $hover-state;
    }

    &-button {
      background: rgba(0, 0, 0, 0);
      border: 0;
      outline: 0;
      padding: 0 29px 0 0;
      text-align: left;
      font-weight: bold;
      font-size: 36px;
      line-height: 40.5px;
      word-break: break-word;

      &:hover {
        cursor: pointer;

        @media (min-width: breakpoint-min(md)) {
          cursor: default;
        }
      }

      &:focus {
        outline-offset: -1px;
        outline: 1px dotted $hover-state;
      }

      &:visited {
        outline: 0;
      }

      &:disabled {
        color: black;
      }
    }
  }

  /* img tag is turned into svg using jquery */
  &__title-arrow {
    background: $default-state;
    position: absolute;
    color: #fff;
    right: 0;
    transform: rotate(0deg);
    transition: 0.5s;
    z-index: 9;
    border-radius: 2px;
    bottom: 5px;

    &:hover {
      cursor: pointer;
    }

    &:focus {
      outline-offset: -3px;
      background: $ucla-blue;
      outline: 1px dotted $hover-state;
    }

    @media (min-width: breakpoint-min(md)) {
      display: none;
    }

    polygon#Path {
      fill: #fff;
    }

    &.flip {
      transform: rotate(180deg);
      transition: 0.5s;
      background: $default-state;
    }
  }

  &__content {
    display: block;
    height: 0;
    transition: 0.5s;
    position: relative;
    max-width: 1200px;
    margin: 0 auto;
    overflow: hidden;
    opacity: 0;

    //always show content on desktop
    @media (min-width: breakpoint-min(md)) {
      opacity: 1 !important;
      height: auto;
      margin-top: 20px;
      overflow: visible;
      position: relative;
    }

    &.grey-bk {
      background: $lightest-grey-2;
      width: calc(100% + 48px);
      margin-left: -24px;
      padding: 0 24px;
      margin-bottom: 20px;
      transition: 0.5s;

      @media (min-width: breakpoint-min(md)) {
        padding-top: 50px;
        width: calc(100% + 70px);
        margin-left: -35px;
        padding-bottom: 20px;
      }
    }

    &.show-me {
      transition: 0.5s;
      height: auto;
      overflow: visible;
      opacity: 1;
      padding-top: 20px;

      @media (min-width: breakpoint-min(md)) {
        padding-top: 30px;
      }

      &.grey-bk {
        margin-bottom: 0;
        transition: 0.5s;
      }
    }
  }
}
